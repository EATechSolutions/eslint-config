name: CI
on:
  pull_request:
    types: [closed]
jobs:
  bump_version_and_release:
    name: Bump version
    if: github.event.pull_request.state == 'closed' && github.event.pull_request.merged == true
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    - name: Set increment patch
      if: contains(github.event.pull_request.title, '[patch]')
      run: npm version patch
    - name: Set increment minor
      if: contains(github.event.pull_request.title, '[minor]')
      run: npm version minor
    - name: Set increment major
      if: contains(github.event.pull_request.title, '[major]')
      run: npm version major
    - name: Push tag
      if: contains(github.event.pull_request.title, '[patch]') || contains(github.event.pull_request.title, '[minor]') || contains(github.event.pull_request.title, '[major]')
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true
    - name: Get version
      run: |
        echo "tags=$(git tag  | grep -E '^v[0-9]' | sort -V | tail -1)" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tags }}
        release_name: ${{ github.event.pull_request.title }}
        body: ${{ github.event.pull_request.title }}
        draft: false
        prerelease: false
    - name: get sha
      id: sha
      run: |
        sha_new=$(git rev-parse HEAD)
        echo $sha_new
        echo "::set-output name=SHA::$sha_new"
    - run:
          echo ${{ steps.sha.outputs.SHA }}
        
  publish:
    name: Publish to Github Packages
    needs: [bump_version_and_release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump_version_and_release.outputs.new_sha }}
          fetch-depth: 0
      - name: Setup registry
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: https://npm.pkg.github.com/
          scope: '@${{ github.event.organization.login }}'
      - run: yarn install --frozen-lockfile
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}